// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Shot.proto

package com.kerpow.games.freethrow.common.message;

public final class ShotOuterClass {
  private ShotOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ShotOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.kerpow.games.freethrow.common.Shot)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required float powerX = 1;</code>
     */
    boolean hasPowerX();
    /**
     * <code>required float powerX = 1;</code>
     */
    float getPowerX();

    /**
     * <code>required float powerY = 2;</code>
     */
    boolean hasPowerY();
    /**
     * <code>required float powerY = 2;</code>
     */
    float getPowerY();

    /**
     * <code>required float ballY = 3;</code>
     */
    boolean hasBallY();
    /**
     * <code>required float ballY = 3;</code>
     */
    float getBallY();

    /**
     * <code>required float ballVelY = 4;</code>
     */
    boolean hasBallVelY();
    /**
     * <code>required float ballVelY = 4;</code>
     */
    float getBallVelY();

    /**
     * <code>required int32 owner = 5;</code>
     */
    boolean hasOwner();
    /**
     * <code>required int32 owner = 5;</code>
     */
    int getOwner();
  }
  /**
   * Protobuf type {@code com.kerpow.games.freethrow.common.Shot}
   */
  public static final class Shot extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.kerpow.games.freethrow.common.Shot)
      ShotOrBuilder {
    // Use Shot.newBuilder() to construct.
    private Shot(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Shot(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Shot defaultInstance;
    public static Shot getDefaultInstance() {
      return defaultInstance;
    }

    public Shot getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Shot(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              powerX_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              powerY_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              ballY_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              ballVelY_ = input.readFloat();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              owner_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kerpow.games.freethrow.common.message.ShotOuterClass.internal_static_com_kerpow_games_freethrow_common_Shot_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kerpow.games.freethrow.common.message.ShotOuterClass.internal_static_com_kerpow_games_freethrow_common_Shot_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.kerpow.games.freethrow.common.message.ShotOuterClass.Shot.class, com.kerpow.games.freethrow.common.message.ShotOuterClass.Shot.Builder.class);
    }

    public static com.google.protobuf.Parser<Shot> PARSER =
        new com.google.protobuf.AbstractParser<Shot>() {
      public Shot parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Shot(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Shot> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int POWERX_FIELD_NUMBER = 1;
    private float powerX_;
    /**
     * <code>required float powerX = 1;</code>
     */
    public boolean hasPowerX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required float powerX = 1;</code>
     */
    public float getPowerX() {
      return powerX_;
    }

    public static final int POWERY_FIELD_NUMBER = 2;
    private float powerY_;
    /**
     * <code>required float powerY = 2;</code>
     */
    public boolean hasPowerY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required float powerY = 2;</code>
     */
    public float getPowerY() {
      return powerY_;
    }

    public static final int BALLY_FIELD_NUMBER = 3;
    private float ballY_;
    /**
     * <code>required float ballY = 3;</code>
     */
    public boolean hasBallY() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required float ballY = 3;</code>
     */
    public float getBallY() {
      return ballY_;
    }

    public static final int BALLVELY_FIELD_NUMBER = 4;
    private float ballVelY_;
    /**
     * <code>required float ballVelY = 4;</code>
     */
    public boolean hasBallVelY() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required float ballVelY = 4;</code>
     */
    public float getBallVelY() {
      return ballVelY_;
    }

    public static final int OWNER_FIELD_NUMBER = 5;
    private int owner_;
    /**
     * <code>required int32 owner = 5;</code>
     */
    public boolean hasOwner() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 owner = 5;</code>
     */
    public int getOwner() {
      return owner_;
    }

    private void initFields() {
      powerX_ = 0F;
      powerY_ = 0F;
      ballY_ = 0F;
      ballVelY_ = 0F;
      owner_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasPowerX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPowerY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBallY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBallVelY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOwner()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, powerX_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, powerY_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, ballY_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, ballVelY_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, owner_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, powerX_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, powerY_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, ballY_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, ballVelY_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, owner_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.kerpow.games.freethrow.common.message.ShotOuterClass.Shot parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kerpow.games.freethrow.common.message.ShotOuterClass.Shot parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kerpow.games.freethrow.common.message.ShotOuterClass.Shot parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.kerpow.games.freethrow.common.message.ShotOuterClass.Shot parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.kerpow.games.freethrow.common.message.ShotOuterClass.Shot parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kerpow.games.freethrow.common.message.ShotOuterClass.Shot parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.kerpow.games.freethrow.common.message.ShotOuterClass.Shot parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.kerpow.games.freethrow.common.message.ShotOuterClass.Shot parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.kerpow.games.freethrow.common.message.ShotOuterClass.Shot parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.kerpow.games.freethrow.common.message.ShotOuterClass.Shot parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kerpow.games.freethrow.common.message.ShotOuterClass.Shot prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kerpow.games.freethrow.common.Shot}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.kerpow.games.freethrow.common.Shot)
        com.kerpow.games.freethrow.common.message.ShotOuterClass.ShotOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.kerpow.games.freethrow.common.message.ShotOuterClass.internal_static_com_kerpow_games_freethrow_common_Shot_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.kerpow.games.freethrow.common.message.ShotOuterClass.internal_static_com_kerpow_games_freethrow_common_Shot_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.kerpow.games.freethrow.common.message.ShotOuterClass.Shot.class, com.kerpow.games.freethrow.common.message.ShotOuterClass.Shot.Builder.class);
      }

      // Construct using com.kerpow.games.freethrow.common.message.ShotOuterClass.Shot.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        powerX_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        powerY_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        ballY_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        ballVelY_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        owner_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kerpow.games.freethrow.common.message.ShotOuterClass.internal_static_com_kerpow_games_freethrow_common_Shot_descriptor;
      }

      public com.kerpow.games.freethrow.common.message.ShotOuterClass.Shot getDefaultInstanceForType() {
        return com.kerpow.games.freethrow.common.message.ShotOuterClass.Shot.getDefaultInstance();
      }

      public com.kerpow.games.freethrow.common.message.ShotOuterClass.Shot build() {
        com.kerpow.games.freethrow.common.message.ShotOuterClass.Shot result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.kerpow.games.freethrow.common.message.ShotOuterClass.Shot buildPartial() {
        com.kerpow.games.freethrow.common.message.ShotOuterClass.Shot result = new com.kerpow.games.freethrow.common.message.ShotOuterClass.Shot(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.powerX_ = powerX_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.powerY_ = powerY_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.ballY_ = ballY_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.ballVelY_ = ballVelY_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.owner_ = owner_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kerpow.games.freethrow.common.message.ShotOuterClass.Shot) {
          return mergeFrom((com.kerpow.games.freethrow.common.message.ShotOuterClass.Shot)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.kerpow.games.freethrow.common.message.ShotOuterClass.Shot other) {
        if (other == com.kerpow.games.freethrow.common.message.ShotOuterClass.Shot.getDefaultInstance()) return this;
        if (other.hasPowerX()) {
          setPowerX(other.getPowerX());
        }
        if (other.hasPowerY()) {
          setPowerY(other.getPowerY());
        }
        if (other.hasBallY()) {
          setBallY(other.getBallY());
        }
        if (other.hasBallVelY()) {
          setBallVelY(other.getBallVelY());
        }
        if (other.hasOwner()) {
          setOwner(other.getOwner());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPowerX()) {
          
          return false;
        }
        if (!hasPowerY()) {
          
          return false;
        }
        if (!hasBallY()) {
          
          return false;
        }
        if (!hasBallVelY()) {
          
          return false;
        }
        if (!hasOwner()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.kerpow.games.freethrow.common.message.ShotOuterClass.Shot parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.kerpow.games.freethrow.common.message.ShotOuterClass.Shot) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float powerX_ ;
      /**
       * <code>required float powerX = 1;</code>
       */
      public boolean hasPowerX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required float powerX = 1;</code>
       */
      public float getPowerX() {
        return powerX_;
      }
      /**
       * <code>required float powerX = 1;</code>
       */
      public Builder setPowerX(float value) {
        bitField0_ |= 0x00000001;
        powerX_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float powerX = 1;</code>
       */
      public Builder clearPowerX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        powerX_ = 0F;
        onChanged();
        return this;
      }

      private float powerY_ ;
      /**
       * <code>required float powerY = 2;</code>
       */
      public boolean hasPowerY() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required float powerY = 2;</code>
       */
      public float getPowerY() {
        return powerY_;
      }
      /**
       * <code>required float powerY = 2;</code>
       */
      public Builder setPowerY(float value) {
        bitField0_ |= 0x00000002;
        powerY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float powerY = 2;</code>
       */
      public Builder clearPowerY() {
        bitField0_ = (bitField0_ & ~0x00000002);
        powerY_ = 0F;
        onChanged();
        return this;
      }

      private float ballY_ ;
      /**
       * <code>required float ballY = 3;</code>
       */
      public boolean hasBallY() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required float ballY = 3;</code>
       */
      public float getBallY() {
        return ballY_;
      }
      /**
       * <code>required float ballY = 3;</code>
       */
      public Builder setBallY(float value) {
        bitField0_ |= 0x00000004;
        ballY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float ballY = 3;</code>
       */
      public Builder clearBallY() {
        bitField0_ = (bitField0_ & ~0x00000004);
        ballY_ = 0F;
        onChanged();
        return this;
      }

      private float ballVelY_ ;
      /**
       * <code>required float ballVelY = 4;</code>
       */
      public boolean hasBallVelY() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required float ballVelY = 4;</code>
       */
      public float getBallVelY() {
        return ballVelY_;
      }
      /**
       * <code>required float ballVelY = 4;</code>
       */
      public Builder setBallVelY(float value) {
        bitField0_ |= 0x00000008;
        ballVelY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float ballVelY = 4;</code>
       */
      public Builder clearBallVelY() {
        bitField0_ = (bitField0_ & ~0x00000008);
        ballVelY_ = 0F;
        onChanged();
        return this;
      }

      private int owner_ ;
      /**
       * <code>required int32 owner = 5;</code>
       */
      public boolean hasOwner() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 owner = 5;</code>
       */
      public int getOwner() {
        return owner_;
      }
      /**
       * <code>required int32 owner = 5;</code>
       */
      public Builder setOwner(int value) {
        bitField0_ |= 0x00000010;
        owner_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 owner = 5;</code>
       */
      public Builder clearOwner() {
        bitField0_ = (bitField0_ & ~0x00000010);
        owner_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kerpow.games.freethrow.common.Shot)
    }

    static {
      defaultInstance = new Shot(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kerpow.games.freethrow.common.Shot)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kerpow_games_freethrow_common_Shot_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kerpow_games_freethrow_common_Shot_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\nShot.proto\022!com.kerpow.games.freethrow" +
      ".common\"V\n\004Shot\022\016\n\006powerX\030\001 \002(\002\022\016\n\006power" +
      "Y\030\002 \002(\002\022\r\n\005ballY\030\003 \002(\002\022\020\n\010ballVelY\030\004 \002(\002" +
      "\022\r\n\005owner\030\005 \002(\005B+\n)com.kerpow.games.free" +
      "throw.common.message"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_com_kerpow_games_freethrow_common_Shot_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_kerpow_games_freethrow_common_Shot_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_kerpow_games_freethrow_common_Shot_descriptor,
        new java.lang.String[] { "PowerX", "PowerY", "BallY", "BallVelY", "Owner", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
